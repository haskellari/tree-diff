# This Travis job script has been generated by a script via
#
#   runghc make_travis_yml_2.hs '-d' '--doctest-options' '--fast -D__DOCTEST__' '-o' '.travis.yml' '-b' 'master' 'tree-diff.cabal'
#
# For more information, see https://github.com/hvr/multi-ghc-travis
#
language: c
sudo: false

git:
  submodules: false  # whether to recursively clone submodules

branches:
  only:
    - master

cache:
  directories:
    - $HOME/.cabal/packages

env:
  global:
    secure: "cPdC9E4ndUzERkZrTUPZS+zUmc3GNkKFrqfAoQjGnjpS+y9ofJ1yh2cF5fXfJ1nstcjTSbZOSYcwYEcAA/but6YHd9z0STtwYd0iunOSPdU4vTWUkpuflf6dRtYgG634V1mn6miRV8GLvEgL3DzPUl1XQDgrH2aCEjZAL86NQZlSFVsozhRoASPO97wxR7oNfbJZ5PYQN/FExwKGVedwq/Hk65r9I77gv3yQb4NAWcreSdD+NKx/c9MlIL7ifz/d4R0M4SeuPL2g/5Y23F4HE19otyQgnpRE+S9gcPVCmvAZQWGvjxp56l2KRctNNMVNR+nKM8soIYWdsa72iKtap7WO+qZTBK8zuz8LtbrNxaW/PS3MXF0yzEJtEtjR4F8V3e+9h6qQdUcX35lv2pCVCYJaHV89BHyt+Hhm4Jd6tdd+rf0EK8INw0abAOIzusiCXe6waDgO5bxJb8Qul2A7BqkbsviYnK2PTSSvk59yQja217tjb1tFqZZz7mwFJLawq8hJfq6lzW6xvi4ejiCQg5G7MWhOJJMUbPeDZ9rd6DhJ5yjoFRa+xAdAhxOPHqhsVL5sHda0J4CyxrSJ9VUybynTgmqVTs8gdJVZcdZOX7RqUK3KtZPTuioGxaUnoSgK78e5cri0S7tFhA//aKYSlim9/xIQ7apH3PZSUGbyUFQ="


before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

  - rm -rfv $HOME/.cabal/packages/head.hackage

matrix:
  include:
    - compiler: "ghc-8.4.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.2,ghc-8.4.3], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.2,ghc-8.2.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.2,ghc-8.0.2], sources: [hvr-ghc]}}
    - compiler: "ghc-7.10.3"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.2,ghc-7.10.3], sources: [hvr-ghc]}}
    - compiler: "ghc-7.8.4"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.2,ghc-7.8.4], sources: [hvr-ghc]}}

before_install:
  - HC=${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - ROOTDIR=$(pwd)
  - mkdir -p $HOME/.local/bin
  - "PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$HOME/local/bin:$PATH"
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER

install:
  - cabal --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - BENCH=${BENCH---enable-benchmarks}
  - TEST=${TEST---enable-tests}
  - HADDOCK=${HADDOCK-true}
  - UNCONSTRAINED=${UNCONSTRAINED-true}
  - NOINSTALLEDCONSTRAINTS=${NOINSTALLEDCONSTRAINTS-false}
  - GHCHEAD=${GHCHEAD-false}

  # - curl -O "https://d3inh5negllkw3.cloudfront.net/haskell-ci-cacher.xz"
  - curl -O "http://oleg.fi/haskell-ci-cacher.xz"
  # - curl -O "https://d3inh5negllkw3.cloudfront.net/haskell-ci-cacher.xz.sig"
  # - gpg2 --keyserver hkps://hkps.pool.sks-keyservers.net --recv-keys 5AC89B3747FF9612810F909EEB7905A7B8BB0BA4 || true
  # - true check signature
  - cat  haskell-ci-cacher.xz | xz --decompress > ${HOME}/.local/bin/haskell-ci-cacher
  - chmod a+x ${HOME}/.local/bin/haskell-ci-cacher

  - travis_retry cabal update -v
  - "sed -i.bak 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config"
  - rm -fv cabal.project cabal.project.local
  - grep -Ev -- '^\s*--' ${HOME}/.cabal/config | grep -Ev '^\s*$'

  - "printf 'packages: \".\"\\n' > cabal.project"
  - touch cabal.project.local
  - "if ! $NOINSTALLEDCONSTRAINTS; then for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/^/constraints: /' | sed 's/-[^-]*$/ installed/' >> cabal.project.local; done; fi"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "./configure.ac" ]; then
      (cd "." && autoreconf -i);
    fi
  - rm -f cabal.project.freeze
  - cabal new-build -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dry -j2 all
  - haskell-ci-cacher --download || echo $?
  - cabal new-build -w ${HC} --disable-tests --disable-benchmarks --project-file="cabal.project" --dry -j2 all
  - haskell-ci-cacher --download
  - rm -rf .ghc.environment.* "."/dist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)

  - if [ $HCNUMVER -ge 80000 ]; then cabal new-install -w ${HC} --symlink-bindir=$HOME/.local/bin doctest --constraint='doctest ==0.15.*'; fi

after_script:
  - haskell-ci-cacher --upload -w $HC

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # test that source-distributions can be generated
  - (cd "." && cabal sdist)
  - mv "."/dist/tree-diff-*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  - "printf 'packages: tree-diff-*/*.cabal\\n' > cabal.project"
  - touch cabal.project.local
  - "if ! $NOINSTALLEDCONSTRAINTS; then for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/^/constraints: /' | sed 's/-[^-]*$/ installed/' >> cabal.project.local; done; fi"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # this builds all libraries and executables (without tests/benchmarks)
  - cabal new-build -w ${HC} --disable-tests --disable-benchmarks all

  # build & run tests, build benchmarks
  - cabal new-build -w ${HC} ${TEST} ${BENCH} all
  - if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} ${TEST} ${BENCH} all; fi

  # doctest
  - if [ $HCNUMVER -ge 80000 ]; then (cd tree-diff-* && doctest --fast -D__DOCTEST__ src); fi

  # cabal check
  - (cd tree-diff-* && cabal check)

  # haddock
  - rm -rf ./dist-newstyle
  - if $HADDOCK; then cabal new-haddock -w ${HC} ${TEST} ${BENCH} all; else echo "Skipping haddock generation";fi

  # Build without installed constraints for packages in global-db
  - if $UNCONSTRAINED; then rm -f cabal.project.local; echo cabal new-build -w ${HC} --disable-tests --disable-benchmarks all; else echo "Not building without installed constraints"; fi

# REGENDATA ["-d","--doctest-options","--fast -D__DOCTEST__","-o",".travis.yml","-b","master","tree-diff.cabal"]
# EOF
